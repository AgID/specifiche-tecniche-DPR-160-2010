sequenceDiagram
    autonumber

    actor P as Presentatore    
    participant F as FrontOffice SUAP
    participant B as BackOffice SUAP   
    participant C as Catalogo SSU 
    participant E as Enti Terzi    

    Note over F,B: istanza procedibile

    alt CdSS da SUAP
        opt 
            B ->> C: request_update_times(cui,times)
            C -->> B: instanceDescriptor
        end 
        B ->> F: notify(cui, instance_descriptor_version,cdss_convened)
        F -->> B: ack    

        par per ogni ente terzo interessato
            B ->> E: notify(cui, instance_descriptor_version,cdss_convened)
            E -->> B: ack
        end
        
        B ->> C: audit(cui,cdss_convened)
        C -->> B: ack

       
    else No CdSS da SUAP

        par per ogni ente terzo interessato        
            B ->> E: send_instance(cui, instance_descriptor_version,instance_index)
            E -->> B: ack
            B ->> C: audit(cui,instance_to_<ET>_sended)
            note right of B: <ET> codice ente terzo 
            C -->> B: ack
            E ->> C: request_instance_descriptor(cui)
            C -->> E: instanceDescriptor
            loop per ogni procedimento di interesse parte dell'istanza 
            E ->> B: request_instance_document(cui, resource_id)
            note left of E: resource_id da instance_index
            B -->> E: instanceDocument
            end
            E ->> C: audit(cui,instance_retrived)
            C -->> E: ack
        end

        alt almeno un ET richiede CdSS entro i tempi
            par almeno un ente terzo
                E ->> B: request_cdss(cui, instance_descriptor_version)
                B -->> E: ack 
                E ->> C: audit(cui,cdss_requested)
                C -->> E: ack           
            end

            opt 
                B ->> C: request_update_times(cui,times)
                C -->> B: instanceDescriptor
            end

            B ->> F: notify(cui, instance_descriptor_version,cdss_convened)
            F -->> B: ack    

            par per ogni ente terzo interessato
                B ->> E: notify(cui, instance_descriptor_version,cdss_convened)
                E -->> B: ack
            end
            
            B ->> C: audit(cui,cdss_convened)
            C -->> B: ack

        else CdSS no richiesta da ET


            opt almeno una richiesta integrazione
                par almeno un ente terzo
                    E ->> B: request_integration(cui, instance_descriptor_version,integration_list,resource_id)
                    B -->> E: ack 
                    opt
                        B ->> E: request_instance_document(cui, resource_id)
                        note right of B: recupero documento di richiesta integrazione
                        E -->> B: instanceDocument    
                    end
                    E ->> C: audit(cui,integration_requested)
                    C -->> E: ack           
                end

                alt concluso il tempo di richiesta integrazione 
                    par per ogni ente terzo
                        B ->> E: notify(cui, instance_descriptor_version, integration_request_time_expired)
                        E -->> B: ack
                    end
                    B ->> C: audit(cui, integration_request_time_expired)
                    C -->> B: ack
                end 

                Note over B: concluso il tempo di richiesta integrazione OR tutti gli enti terzi hanno richiesto integrazione
                B ->> F: request_integration(cui, instance_descriptor_version,list_of_integration_list,integration_document_list)
                F -->> B: ack
                B ->> C: audit(cui,integration_requested)
                C -->> B: ack
                opt
                    loop recupero documenti di richiesta integrazione degli ET
                    F ->> B: request_instance_document(cui, resource_id)
                    note right of F: resource_id in integration_document_list
                    B -->> F: instanceDocument    
                    end
                end
                F -) P: notification(cui,integration_requested) 

                alt oltre il tempo di integrazione del presentatore
                    B ->> F: notify(cui, instance_descriptor_version,end_by_integration_times_expired)
                    F -->> B: ack
                    par per ogni ente terzo interessato
                        B ->> E: notify(cui, instance_descriptor_version,end_by_integration_times_expired)
                        E -->> B: ack
                    end
                    B ->> C: audit(cui,end_by_integration_request_time_expired)
                    C -->> B: ack

                    F -) P: notification(cui,end_by_integration_times_expired)
                else entro il tempo di integrazione del presentatore 
                    P --) F: instanceIntegrated
                    F ->> B: send_instance(cui, instance_descriptor_version,instance_index)
                    B -->> F: ack
                    F ->> C: audit(cui,instance_integrated_to_<BO>_sended)
                    note right of F: <BO> codice BackOffice
                    C -->> F: ack
                    loop per ogni procedimento parte dell'istanza 
                        B ->> F: request_instance_document(cui, resource_id)
                        note left of B: resource_id da instance_index
                        F -->> B: instanceDocument
                    end
                    B ->> C: audit(cui,instance_integrated_retrived)
                    C -->> B: ack
                    par per ogni ente terzo interessato                
                        B ->> E: send_instance(cui, instance_descriptor_version,instance_index)
                        E -->> B: ack
                        B ->> C: audit(cui,instance_integrated_to_<ET>_sended)
                        note right of B: <ET> codice ente terzo
                        C -->> B: ack
                        loop per ogni procedimento di interesse parte dell'istanza 
                            E ->> B: request_instance_document(cui, resource_id)
                            note left of E: resource_id da instance_index
                            B -->> E: instanceDocument
                        end
                        E ->> C: audit(cui,instance_integrated_retrived)
                        C -->> E: ack
                    end

                end

            end
            
            alt integrazione non richiesta, oppure richiesta e istanza integrata nei tempi dal presentatore

                par
                    alt 
                        E ->> B: send_conclusions(cui, instance_descriptor_version,suspension_requested,resource_id)
                        B -->> E: ack 
                        E ->> C: audit(cui,suspension_requested)
                        C -->> E: ack
                        opt
                            B ->> E: request_instance_document(cui, resource_id)
                            note right of B: recupero documento di richiesta sospensione
                            E -->> B: instanceDocument    
                        end   
                    else
                        E ->> B: send_conclusions(cui, instance_descriptor_version,conformation_requested,resource_id)
                        B -->> E: ack 
                        E ->> C: audit(cui,conformation_requested)
                        C -->> E: ack 
                        opt
                            B ->> E: request_instance_document(cui, resource_id)
                            note right of B: recupero documento di richiesta conformazione
                            E -->> B: instanceDocument    
                        end
                    else
                        opt parere esplicito, in alternativa al silezio assenso
                            E ->> B: send_conclusions(cui, instance_descriptor_version,positive_outcome,resource_id)
                            B -->> E: ack 
                            E ->> C: audit(cui,positive_outcome_sended)
                            C -->> E: ack
                            opt
                                B ->> E: request_instance_document(cui, resource_id)
                                note right of B: recupero documento di parere positivo
                                E -->> B: instanceDocument    
                            end
                        end
                    end       
                end
 
                Note over B,E: concluso tempo ricezione pareri, o tutti gli ET hanno inviato  parere

                alt CdSS da SUAP
                    opt 
                        B ->> C: request_update_times(cui,times)
                        C -->> B: instanceDescriptor
                    end 

                    B ->> F: notify(cui, instance_descriptor_version,cdss_convened)
                    F -->> B: ack    

                    par per ogni ente terzo interessato
                        B ->> E: notify(cui, instance_descriptor_version,cdss_convened)
                        E -->> B: ack
                    end
                    
                    B ->> C: audit(cui,cdss_convened)
                    C -->> B: ack
                else NO CdSS by SUAP
                
                    alt concluso tempo istanza o provvedimento autorizzativo emesso, senza richieste sospensione/conformazione 
                        B ->> F: notify(cui, instance_descriptor_version,end_by_positive_outcome,resource_id)
                        F -->> B: ack
                        F ->> B: request_instance_document(cui, resource_id)
                        note right of F: recupero documento di provvedimento di autorizzazione
                        B -->> F: instanceDocument            
                        par per ogni ente terzo interessato
                            B ->> E: notify(cui, instance_descriptor_version,end_by_positive_outcome)
                            E -->> B: ack
                        end
                        B ->> C: audit(cui,end_by_positive_outcome)
                        C -->> B: ack
                    else concluso tempo istanza o tutti gli enti terzi hanno inoltrato conclusione, almeno una richiesta sospensione
                        B ->> F: notify(cui, instance_descriptor_version,end_by_suspension_requested,resource_id)
                        F -->> B: ack  
                        F ->> B: request_instance_document(cui, resource_id)
                        note right of F: recupero documento di provvedimento di sospensione motivata
                        B -->> F: instanceDocument            
                        F -) P: notification(cui,end_by_suspension_requested)          
                        par per ogni ente terzo interessato
                            B ->> E: notify(cui, instance_descriptor_version,end_by_suspension_requested)
                            E -->> B: ack
                        end
                        B ->> C: audit(cui,end_by_suspension_requested)
                        C -->> B: ack
                    else concluso tempo istanza o tutti gli enti terzi hanno inoltrato conclusione, nessuna richiesta sospesione,almeno una richiesta conformazione
                        B ->> F: notify(cui, instance_descriptor_version,end_by_conformation_requested,resource_id)
                        F -->> B: ack  
                        F ->> B: request_instance_document(cui, resource_id)
                        note right of F: recupero documento di provvedimento di conformazione richiesta
                        B -->> F: instanceDocument            
                        F -) P: notification(cui,end_by_conformation_requested)          
                        par per ogni ente terzo interessato
                            B ->> E: notify(cui, instance_descriptor_version,end_by_conformation_requested)
                            E -->> B: ack
                        end
                        B ->> C: audit(cui,end_by_conformation_requested)
                        C -->> B: ack
                    end
                end

            end

        end

   end